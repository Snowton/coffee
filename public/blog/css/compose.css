.compose {
    display: flex;
}

.compose > section {
    width: 50%;
    padding: 20px;
    display: flex;

    /* align-self: center; */
}

.compose form {
    width: 100%;
}

.compose form > div {
    padding: 20px 0;
}

.compose input {
    width: 100%;
    padding: 10px;
    font: inherit;
    border: none;
}

.compose .grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
}

/* .grow-wrap::after ===== .helper */

.compose .grow-wrap::after, .compose .grow-wrap .helper {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value)" "; 

    /* This is how textarea text behaves */
    white-space: pre-wrap;

    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
}

.compose .grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;

    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
}

.compose .grow-wrap > textarea,
.compose .grow-wrap::after,
.compose .grow-wrap .helper {
    width: 100%;
    padding: 5px 5px;
    /* Identical styling required!! */
    border: none;
    font: inherit;
    word-wrap: break-word;
    word-break: break-word;

    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
}

.compose label {
    display: block;
    display: none;
}

.compose .btn {
    text-align: center;
}

.compose button {
    border: none;

    background-color: var(--background-hf);
    font: inherit;
    padding: 12px 20px;
    cursor: pointer;
    border-radius: 5px;
}

.compose button:hover {
    box-shadow: 0 0 3px;
}

.compose section .preview {
    width: 100%;
}